{"ast":null,"code":"//2.adım\nimport { EKLE, ISARETLE } from \"./actions\";\nimport { SIL } from \"./actions\";\nimport { TEMIZLE } from \"./actions\";\nimport { GUNCELLE } from \"./actions\";\nconst INITIAL_STATE = {\n  liste: [{\n    id: 1,\n    baslik: \"Alisveris Yap\",\n    tamamlandi: false\n  }, {\n    id: 2,\n    baslik: \"Fatura ode\",\n    tamamlandi: true\n  }, {\n    id: 3,\n    baslik: \"Kimyacıyı bul\",\n    tamamlandi: true\n  }]\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  //5.adım\n  switch (action.type) {\n    case EKLE:\n      return {\n        ...state,\n        liste: [...state.liste, {\n          id: state.liste.length + 1,\n          baslik: action.payload,\n          tamamlandi: false\n        }]\n      };\n    case SIL:\n      return {\n        ...state,\n        liste: state.liste.filter(list => list.id !== action.payload)\n      };\n    case ISARETLE:\n      return {\n        ...state,\n        liste: state.liste.map(item => item.id === action.payload ? {\n          ...item,\n          tamamlandi: !item.tamamlandi\n        } : item)\n      };\n    case TEMIZLE:\n      return {\n        ...state,\n        liste: state.liste.filter(item => item.tamamlandi === false)\n      };\n    case GUNCELLE:\n      return {\n        ...state,\n        liste: state.liste.map(item => {\n          console.log(action.payload.baslik);\n          if (item.id === action.payload.id) {\n            return {\n              ...item,\n              baslik: action.payload.baslik\n            };\n          } else {\n            return item;\n          }\n        })\n      };\n    default:\n      return state;\n  }\n};\n\n/*\r\n            case TEMIZLE:\r\n              return {\r\n                ...state,\r\n                liste:state.liste.map((item)=>{return {...item,tamamlandi:false}})\r\n              };\r\n*/","map":{"version":3,"names":["EKLE","ISARETLE","SIL","TEMIZLE","GUNCELLE","INITIAL_STATE","liste","id","baslik","tamamlandi","reducer","state","arguments","length","undefined","action","type","payload","filter","list","map","item","console","log"],"sources":["C:/Users/efsan/Desktop/ReactYeni/24Şubat/ReduxTodoList-Beginner/redux-todolist/src/reducers/index.js"],"sourcesContent":["//2.adım\r\nimport { EKLE, ISARETLE } from \"./actions\";\r\nimport { SIL } from \"./actions\";\r\nimport { TEMIZLE } from \"./actions\";\r\nimport { GUNCELLE } from \"./actions\";\r\nconst INITIAL_STATE = {\r\n  liste: [\r\n    { id: 1, baslik: \"Alisveris Yap\", tamamlandi: false },\r\n    { id: 2, baslik: \"Fatura ode\", tamamlandi: true },\r\n    { id: 3, baslik: \"Kimyacıyı bul\", tamamlandi: true },\r\n  ],\r\n};\r\n\r\nexport const reducer = (state = INITIAL_STATE, action) => {\r\n  //5.adım\r\n  switch (action.type) {\r\n    case EKLE:\r\n      return {\r\n        ...state,\r\n        liste: [\r\n          ...state.liste,\r\n          {\r\n            id: state.liste.length + 1,\r\n            baslik: action.payload,\r\n            tamamlandi: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case SIL:\r\n      return {\r\n        ...state,\r\n        liste: state.liste.filter((list) => list.id !== action.payload),\r\n      };\r\n\r\n    case ISARETLE:\r\n      return {\r\n        ...state,\r\n        liste: state.liste.map((item) =>\r\n          item.id === action.payload\r\n            ? { ...item, tamamlandi: !item.tamamlandi }\r\n            : item\r\n        ),\r\n      };\r\n\r\n    case TEMIZLE:\r\n      return {\r\n        ...state,\r\n        liste: state.liste.filter((item) => item.tamamlandi === false),\r\n      };\r\n\r\n    case GUNCELLE:\r\n      return {\r\n        ...state,\r\n        liste: state.liste.map((item) => {\r\n          console.log(action.payload.baslik);\r\n          if (item.id === action.payload.id) {\r\n            return {\r\n              ...item,\r\n              baslik: action.payload.baslik,\r\n            };\r\n          } else {\r\n            return item;\r\n          }\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/*\r\n            case TEMIZLE:\r\n              return {\r\n                ...state,\r\n                liste:state.liste.map((item)=>{return {...item,tamamlandi:false}})\r\n              };\r\n*/\r\n"],"mappings":"AAAA;AACA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,WAAW;AAC1C,SAASC,GAAG,QAAQ,WAAW;AAC/B,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,QAAQ,QAAQ,WAAW;AACpC,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,eAAe;IAAEC,UAAU,EAAE;EAAM,CAAC,EACrD;IAAEF,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,YAAY;IAAEC,UAAU,EAAE;EAAK,CAAC,EACjD;IAAEF,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,eAAe;IAAEC,UAAU,EAAE;EAAK,CAAC;AAExD,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAmC;EAAA,IAAlCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,aAAa;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnD;EACA,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKhB,IAAI;MACP,OAAO;QACL,GAAGW,KAAK;QACRL,KAAK,EAAE,CACL,GAAGK,KAAK,CAACL,KAAK,EACd;UACEC,EAAE,EAAEI,KAAK,CAACL,KAAK,CAACO,MAAM,GAAG,CAAC;UAC1BL,MAAM,EAAEO,MAAM,CAACE,OAAO;UACtBR,UAAU,EAAE;QACd,CAAC;MAEL,CAAC;IAEH,KAAKP,GAAG;MACN,OAAO;QACL,GAAGS,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKQ,MAAM,CAACE,OAAO;MAChE,CAAC;IAEH,KAAKhB,QAAQ;MACX,OAAO;QACL,GAAGU,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACc,GAAG,CAAEC,IAAI,IAC1BA,IAAI,CAACd,EAAE,KAAKQ,MAAM,CAACE,OAAO,GACtB;UAAE,GAAGI,IAAI;UAAEZ,UAAU,EAAE,CAACY,IAAI,CAACZ;QAAW,CAAC,GACzCY,IAAI;MAEZ,CAAC;IAEH,KAAKlB,OAAO;MACV,OAAO;QACL,GAAGQ,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACY,MAAM,CAAEG,IAAI,IAAKA,IAAI,CAACZ,UAAU,KAAK,KAAK;MAC/D,CAAC;IAEH,KAAKL,QAAQ;MACX,OAAO;QACL,GAAGO,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACc,GAAG,CAAEC,IAAI,IAAK;UAC/BC,OAAO,CAACC,GAAG,CAACR,MAAM,CAACE,OAAO,CAACT,MAAM,CAAC;UAClC,IAAIa,IAAI,CAACd,EAAE,KAAKQ,MAAM,CAACE,OAAO,CAACV,EAAE,EAAE;YACjC,OAAO;cACL,GAAGc,IAAI;cACPb,MAAM,EAAEO,MAAM,CAACE,OAAO,CAACT;YACzB,CAAC;UACH,CAAC,MAAM;YACL,OAAOa,IAAI;UACb;QACF,CAAC;MACH,CAAC;IAEH;MACE,OAAOV,KAAK;EAAC;AAEnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}