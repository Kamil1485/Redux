{"ast":null,"code":"//2.adım\nimport { EKLE, ISARETLE } from \"./actions\";\nimport { SIL } from \"./actions\";\nimport { TEMIZLE } from \"./actions\";\nimport { GUNCELLE } from \"./actions\";\nconst INITIAL_STATE = {\n  liste: [{\n    id: 1,\n    baslik: \"Alisveris Yap\",\n    tamamlandi: false\n  }, {\n    id: 2,\n    baslik: \"Fatura ode\",\n    tamamlandi: true\n  }, {\n    id: 3,\n    baslik: \"Kimyacıyı bul\",\n    tamamlandi: true\n  }]\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  //5.adım\n  switch (action.type) {\n    case EKLE:\n      return {\n        ...state,\n        liste: [...state.liste, {\n          id: state.liste.id,\n          baslik: action.payload,\n          tamamlandi: false\n        }]\n      };\n    case SIL:\n      return {\n        ...state,\n        liste: state.liste.filter(list => list.id !== action.payload)\n      };\n    case ISARETLE:\n      return {\n        ...state,\n        liste: state.liste.map(item => item.id === action.payload ? {\n          ...item,\n          tamamlandi: !item.tamamlandi\n        } : item)\n      };\n    case TEMIZLE:\n      return {\n        ...state,\n        liste: state.liste.filter(item => item.tamamlandi === false)\n      };\n    case GUNCELLE:\n      return {\n        ...state,\n        liste: state.liste.map(item => {\n          console.log(action.payload.baslik);\n          if (item.id === action.payload.id) {\n            return {\n              ...item,\n              baslik: action.payload.baslik\n            };\n          } else {\n            return item;\n          }\n        })\n      };\n    default:\n      return state;\n  }\n};\n\n/*\r\n            case TEMIZLE:\r\n              return {\r\n                ...state,\r\n                liste:state.liste.map((item)=>{return {...item,tamamlandi:false}})\r\n              };\r\n*/","map":{"version":3,"names":["EKLE","ISARETLE","SIL","TEMIZLE","GUNCELLE","INITIAL_STATE","liste","id","baslik","tamamlandi","reducer","state","arguments","length","undefined","action","type","payload","filter","list","map","item","console","log"],"sources":["C:/Users/efsan/Desktop/ReactYeni/24Şubat/ReduxTodoList-Beginner/redux-todolist/src/reducers/index.js"],"sourcesContent":["//2.adım\r\nimport { EKLE, ISARETLE } from \"./actions\";\r\nimport { SIL } from \"./actions\";\r\nimport { TEMIZLE } from \"./actions\";\r\nimport { GUNCELLE } from \"./actions\";\r\nconst INITIAL_STATE = {\r\n    liste:[\r\n      { id: 1, baslik: \"Alisveris Yap\", tamamlandi: false },\r\n    { id: 2, baslik: \"Fatura ode\", tamamlandi: true },\r\n    { id: 3, baslik: \"Kimyacıyı bul\", tamamlandi: true }\r\n    ]\r\n}\r\n  \r\n\r\nexport const reducer=(state=INITIAL_STATE,action)=>{//5.adım\r\n    switch(action.type){\r\n      case EKLE:\r\n        return{\r\n           ...state,\r\n            liste:[...state.liste,{\r\n            id:state.liste.id,\r\n            baslik:action.payload,\r\n            tamamlandi:false\r\n           }]\r\n        }\r\n\r\n        case SIL:\r\n          return {\r\n            ...state,\r\n            liste: state.liste.filter((list) => list.id !== action.payload),\r\n          };\r\n\r\n          case ISARETLE:\r\n            return {\r\n              ...state,\r\n              liste:state.liste.map((item)=>item.id===action.payload ?{...item,tamamlandi:!item.tamamlandi}:item)\r\n            };\r\n        \r\n\r\n            case TEMIZLE:\r\n              return {\r\n                ...state,\r\n                liste:state.liste.filter((item)=>item.tamamlandi===false)\r\n              };\r\n\r\n              case GUNCELLE:\r\n                return {\r\n                  ...state,\r\n                  liste: state.liste.map((item) => {\r\n                    console.log(action.payload.baslik)\r\n                    if (item.id === action.payload.id) {\r\n                      return {\r\n                        ...item,\r\n                        baslik: action.payload.baslik\r\n                      }\r\n                    } else {\r\n                      return item;\r\n                    }\r\n                  })\r\n                }\r\n                \r\n        default:return state;\r\n        \r\n       \r\n  \r\n\r\n}\r\n}\r\n\r\n/*\r\n            case TEMIZLE:\r\n              return {\r\n                ...state,\r\n                liste:state.liste.map((item)=>{return {...item,tamamlandi:false}})\r\n              };\r\n*/"],"mappings":"AAAA;AACA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,WAAW;AAC1C,SAASC,GAAG,QAAQ,WAAW;AAC/B,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,QAAQ,QAAQ,WAAW;AACpC,MAAMC,aAAa,GAAG;EAClBC,KAAK,EAAC,CACJ;IAAEC,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,eAAe;IAAEC,UAAU,EAAE;EAAM,CAAC,EACvD;IAAEF,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,YAAY;IAAEC,UAAU,EAAE;EAAK,CAAC,EACjD;IAAEF,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,eAAe;IAAEC,UAAU,EAAE;EAAK,CAAC;AAExD,CAAC;AAGD,OAAO,MAAMC,OAAO,GAAC,SAAAA,CAAA,EAA8B;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACP,aAAa;EAAA,IAACU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAI;EAChD,QAAOC,MAAM,CAACC,IAAI;IAChB,KAAKhB,IAAI;MACP,OAAM;QACH,GAAGW,KAAK;QACPL,KAAK,EAAC,CAAC,GAAGK,KAAK,CAACL,KAAK,EAAC;UACtBC,EAAE,EAACI,KAAK,CAACL,KAAK,CAACC,EAAE;UACjBC,MAAM,EAACO,MAAM,CAACE,OAAO;UACrBR,UAAU,EAAC;QACZ,CAAC;MACJ,CAAC;IAED,KAAKP,GAAG;MACN,OAAO;QACL,GAAGS,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKQ,MAAM,CAACE,OAAO;MAChE,CAAC;IAED,KAAKhB,QAAQ;MACX,OAAO;QACL,GAAGU,KAAK;QACRL,KAAK,EAACK,KAAK,CAACL,KAAK,CAACc,GAAG,CAAEC,IAAI,IAAGA,IAAI,CAACd,EAAE,KAAGQ,MAAM,CAACE,OAAO,GAAE;UAAC,GAAGI,IAAI;UAACZ,UAAU,EAAC,CAACY,IAAI,CAACZ;QAAU,CAAC,GAACY,IAAI;MACpG,CAAC;IAGD,KAAKlB,OAAO;MACV,OAAO;QACL,GAAGQ,KAAK;QACRL,KAAK,EAACK,KAAK,CAACL,KAAK,CAACY,MAAM,CAAEG,IAAI,IAAGA,IAAI,CAACZ,UAAU,KAAG,KAAK;MAC1D,CAAC;IAED,KAAKL,QAAQ;MACX,OAAO;QACL,GAAGO,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACc,GAAG,CAAEC,IAAI,IAAK;UAC/BC,OAAO,CAACC,GAAG,CAACR,MAAM,CAACE,OAAO,CAACT,MAAM,CAAC;UAClC,IAAIa,IAAI,CAACd,EAAE,KAAKQ,MAAM,CAACE,OAAO,CAACV,EAAE,EAAE;YACjC,OAAO;cACL,GAAGc,IAAI;cACPb,MAAM,EAAEO,MAAM,CAACE,OAAO,CAACT;YACzB,CAAC;UACH,CAAC,MAAM;YACL,OAAOa,IAAI;UACb;QACF,CAAC;MACH,CAAC;IAET;MAAQ,OAAOV,KAAK;EAAC;AAM7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}