{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\efsan\\\\Desktop\\\\ReactYeni\\\\24\\u015Eubat\\\\ReduxDemo\\\\react-redux-demoo\\\\src\\\\components\\\\HooksCakeContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { buyCake } from '../redux/cake/cakeActions';\nimport { refundCake } from '../redux/cake/cakeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HooksCakeContainer = () => {\n  _s();\n  const numofCakes = useSelector(state => state.cake.numofCakes); // like mapStateToProps \n  console.log(numofCakes);\n  const [adet, setAdet] = useState(numofCakes - 1);\n  console.log(adet);\n\n  //const  numofCakes= useSelector(state=>state.numofCakes)// like mapStateToProps  //single reducer using,not using combineReducer\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"useSelector:Num of Cakes:\", numofCakes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(buyCake()),\n      children: \"Buy Cake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: numofCakes > adet,\n      onClick: () => dispatch(refundCake()),\n      children: \"Refund Cake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(HooksCakeContainer, \"UHdRP9QY52BdRLVw2+LrtPpqEZM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = HooksCakeContainer;\nexport default HooksCakeContainer;\n//useSelector  store da saklanan state değerlerini erişmeyi sağlar.\n//başlangıçta store da ınıtıalState değeri saklanıyor daha sonra değiştirilip güncel değer saklanıyor.\n/*\r\nuseDispatch, Redux store'a bağlı bir React bileşenindeki eylem yaratıcısı (action creator) fonksiyonlarını tetiklemek için kullanılır. \r\nBu, Redux store'da state değişikliklerini tetiklemek için kullanılan eylemlerin dispatch edilmesine olanak tanır.\r\n*/\n/*\r\nuseSelector ise, Redux store'daki state'in seçilmesi için kullanılır. Bu hook, Redux store'daki state değiştiğinde otomatik olarak yenilenir ve bileşenin state'e bağlı olarak yeniden render edilmesine neden olur.\r\n\r\nuseSelector fonksiyonu, Redux store'dan sadece bir değer döndürebilir. \r\nAncak, birden fazla değer almak istiyorsanız, bunları bir obje içinde toplayabilirsiniz.\r\nEx: \r\nimport { createSelector } from 'reselect';\r\n\r\nconst counterSelector = state => state.counter;\r\nconst userNameSelector = state => state.user.name;\r\n\r\nexport const selectCounter = createSelector(\r\n  counterSelector,\r\n  counter => counter\r\n);\r\n\r\nexport const selectUserName = createSelector(\r\n  userNameSelector,\r\n  name => name\r\n);\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCounter, selectUserName } from './selectors';\r\n\r\nfunction Selector() {\r\n  const { counter, userName } = useSelector((state) => ({\r\n    counter: selectCounter(state),\r\n    userName: selectUserName(state),\r\n  }));\r\n\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"HooksCakeContainer\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","buyCake","refundCake","jsxDEV","_jsxDEV","HooksCakeContainer","_s","numofCakes","state","cake","console","log","adet","setAdet","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/efsan/Desktop/ReactYeni/24Şubat/ReduxDemo/react-redux-demoo/src/components/HooksCakeContainer.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport {buyCake} from '../redux/cake/cakeActions'\r\nimport { refundCake } from '../redux/cake/cakeActions'\r\nconst HooksCakeContainer = () => {\r\n\r\nconst  numofCakes= useSelector(state=>state.cake.numofCakes)// like mapStateToProps \r\nconsole.log(numofCakes)\r\n\r\nconst[adet,setAdet]=useState(numofCakes-1);\r\nconsole.log(adet)\r\n\r\n//const  numofCakes= useSelector(state=>state.numofCakes)// like mapStateToProps  //single reducer using,not using combineReducer\r\nconst dispatch=useDispatch()\r\n\r\n\r\nreturn (\r\n    <div>\r\n        <h2>useSelector:Num of Cakes:{ numofCakes}</h2>\r\n        <button onClick={()=>dispatch(buyCake())}>Buy Cake</button>\r\n        <button  disabled={numofCakes>adet} onClick={()=>dispatch(refundCake())}>Refund Cake</button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HooksCakeContainer\r\n//useSelector  store da saklanan state değerlerini erişmeyi sağlar.\r\n//başlangıçta store da ınıtıalState değeri saklanıyor daha sonra değiştirilip güncel değer saklanıyor.\r\n/*\r\nuseDispatch, Redux store'a bağlı bir React bileşenindeki eylem yaratıcısı (action creator) fonksiyonlarını tetiklemek için kullanılır. \r\nBu, Redux store'da state değişikliklerini tetiklemek için kullanılan eylemlerin dispatch edilmesine olanak tanır.\r\n*/\r\n/*\r\nuseSelector ise, Redux store'daki state'in seçilmesi için kullanılır. Bu hook, Redux store'daki state değiştiğinde otomatik olarak yenilenir ve bileşenin state'e bağlı olarak yeniden render edilmesine neden olur.\r\n\r\nuseSelector fonksiyonu, Redux store'dan sadece bir değer döndürebilir. \r\nAncak, birden fazla değer almak istiyorsanız, bunları bir obje içinde toplayabilirsiniz.\r\nEx: \r\nimport { createSelector } from 'reselect';\r\n\r\nconst counterSelector = state => state.counter;\r\nconst userNameSelector = state => state.user.name;\r\n\r\nexport const selectCounter = createSelector(\r\n  counterSelector,\r\n  counter => counter\r\n);\r\n\r\nexport const selectUserName = createSelector(\r\n  userNameSelector,\r\n  name => name\r\n);\r\nimport { useSelector } from 'react-redux';\r\nimport { selectCounter, selectUserName } from './selectors';\r\n\r\nfunction Selector() {\r\n  const { counter, userName } = useSelector((state) => ({\r\n    counter: selectCounter(state),\r\n    userName: selectUserName(state),\r\n  }));\r\n\r\n\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,OAAO,QAAO,2BAA2B;AACjD,SAASC,UAAU,QAAQ,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACtD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjC,MAAOC,UAAU,GAAER,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAC5DG,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;EAEvB,MAAK,CAACK,IAAI,EAACC,OAAO,CAAC,GAACf,QAAQ,CAACS,UAAU,GAAC,CAAC,CAAC;EAC1CG,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;;EAEjB;EACA,MAAME,QAAQ,GAACd,WAAW,EAAE;EAG5B,oBACII,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,GAAI,2BAAyB,EAAER,UAAU;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC/Cf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAIN,QAAQ,CAACb,OAAO,EAAE,CAAE;MAAAc,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC3Df,OAAA;MAASiB,QAAQ,EAAEd,UAAU,GAACK,IAAK;MAACQ,OAAO,EAAEA,CAAA,KAAIN,QAAQ,CAACZ,UAAU,EAAE,CAAE;MAAAa,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAE3F;AAEV,CAAC;AAAAb,EAAA,CApBKD,kBAAkB;EAAA,QAELN,WAAW,EAOfC,WAAW;AAAA;AAAAsB,EAAA,GATpBjB,kBAAkB;AAsBxB,eAAeA,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}